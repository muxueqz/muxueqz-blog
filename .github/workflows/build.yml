name: Build

on:
  repository_dispatch:
  workflow_dispatch:
  push:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: srcs

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: muxueqz/kun
          path: kun

      - name: Configure
        run: |
          ls -alhtR
          cd kun
          kun_latest=$(curl 'https://api.github.com/repos/muxueqz/kun/releases/latest' | grep -o '"browser_download_url":[ ]*"[^"]*' | cut -d'"' -f4)
          echo $kun_latest
          curl -L -o build $kun_latest

      - name: Build
        run: |
          cd kun
          rm -rf srcs
          mv -v ../srcs/ srcs
          mkdir -pv public/tags/
          chmod +x build
          ./build
          # chown -R 1000.1000 .
          # chown -R nobody .

      - name: List
        run: |
          ls -alhtR
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./kun/public

      - name: Git Push
        uses: ad-m/github-push-action@v0.5.0
        with:
          branch: pages
          repository: muxueqz/muxueqz-blog
          force: false
          directory: ./kun/public
          github_token: ${{ secrets.GITHUB_TOKEN }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
